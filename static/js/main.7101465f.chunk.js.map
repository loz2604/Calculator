{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","total","setTotal","id","className","map","item","onClick","val","currentTotal","shift","sum","join","newSum","evaluate","display","parseFloat","toFixed","length","push","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmEeA,EA/DH,WACR,MAA0BC,mBAAS,CAAC,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KA4CA,OACI,qBAAKC,GAAG,OAAR,SACI,sBAAKC,UAAU,aAAf,UACI,qBAAKD,GAAG,SAAR,SACI,oBAAIA,GAAG,SAAP,SAAiBF,MAErB,qBAAKG,UAAU,SAAf,SACI,qBAAKD,GAAG,SAAR,SAlDF,CAAC,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,KAAM,EAAG,IAAK,KAmD1CE,KAAI,SAACC,GACV,OAAO,wBAAQH,GAAG,MAAMI,QAAS,kBA9BrC,SAACC,GACjB,IAAIC,EAAeR,EAInB,GAHiB,IAAbA,EAAM,IACNQ,EAAaC,QAEL,OAARF,EACAN,EAAS,CAAC,SACP,GAAY,MAARM,EAAa,CACpB,IAAIG,EAAMF,EAAaG,KAAK,IACxBC,EAASC,YAASH,GAClBI,EAAUC,WAAWH,EAAOI,QAAQ,IACxCf,EAAS,CAACa,QACP,CACH,GAAIN,EAAaS,QAAU,GACvB,OAEAT,EAAaU,KAAKX,GAClBN,EAAS,YAAIO,KAasCW,CAAYd,IAA5C,SAAoDA,iBC9CxEe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7101465f.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { evaluate } from \"mathjs\"\r\n\r\nconst App = () => {\r\n    const [total, setTotal] = useState([0])\r\n    let buttons = [7, 8, 9, \"+\", 4, 5, 6, \"-\", 1, 2, 3, \"*\", \"AC\", 0, \"=\", \"/\"]\r\n\r\n    //     let buttons = [\r\n    //     {val: 7, style:\"num\"},    \r\n    //     {val: 8, style:\"num\"},    \r\n    //     {val: 9, style:\"num\"},    \r\n    //     {val: \"+\", style:\"operator\"},    \r\n    //     {val: 4, style:\"num\"},    \r\n    //     {val: 5, style:\"num\"},    \r\n    //     {val: 6, style:\"num\"},    \r\n    //     {val: \"-\", style:\"operator\"},    \r\n    //     {val: 1, style:\"num\"},    \r\n    //     {val: 2, style:\"num\"},    \r\n    //     {val: 3, style:\"num\"},    \r\n    //     {val: \"*\", style:\"operator\", alias: \"x\"},    \r\n    //     {val: \"AC\", style:\"operator\"},    \r\n    //     {val: 0, style:\"clear\"},    \r\n    //     {val: \"=\", style:\"operator\"},    \r\n    //     {val: \"/\", style:\"operator\", alias: \"รท\"},    \r\n\r\n    // ]\r\n\r\n    const handleClick = (val) => {\r\n        let currentTotal = total\r\n        if (total[0] === 0) {\r\n            currentTotal.shift()\r\n        }\r\n        if (val === \"AC\") {\r\n            setTotal([0])\r\n        } else if (val === \"=\") {\r\n            let sum = currentTotal.join(\"\");\r\n            let newSum = evaluate(sum);\r\n            let display = parseFloat(newSum.toFixed(2))\r\n            setTotal([display])\r\n        } else {\r\n            if (currentTotal.length >= 11) {\r\n                return\r\n            } else {\r\n                currentTotal.push(val)\r\n                setTotal([...currentTotal])\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"body\">\r\n            <div className=\"calculator\">\r\n                <div id=\"screen\">\r\n                    <h1 id=\"number\">{total}</h1>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <div id=\"numpad\">\r\n                        {buttons.map((item) => {\r\n                            return <button id=\"num\" onClick={() => handleClick(item)}>{item}</button>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}